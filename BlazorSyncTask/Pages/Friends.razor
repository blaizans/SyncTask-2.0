@page "/Friends"
@using BlazorSyncTask.Services
@using global::Shared.Dtos
@using System.Security.Claims
@using BlazorSyncTask.Services.Http



@if (friends == null)
{
    <p>Loading friends...</p>
    
}
else if (friends.Count == 0)
{
    <p>You have no friends yet.</p>
}
else
{
    <ul>
        @foreach (var friend in friends)
        {
            <li>@friend.username || @friend.email || @friend.fullName  </li>
        }
    </ul>
}
<AuthorizeView>
    <Authorized>
        <h3>Hello @context.User.Identity.Name</h3>
        <p>@context.User.FindFirst(c => c.Type == "Id")?.Value;</p>
        <p>
            Your claims include:
            <ol>
                @foreach (Claim claim in context.User.Claims)
                {
                    <li>
                        <label>@claim.Type: @claim.Value</label>
                    </li>
                }
            </ol>
        </p>
    </Authorized>
    <NotAuthorized>
        <p>You are not logged in.</p>
    </NotAuthorized>
</AuthorizeView>

@code { 
    [CascadingParameter]
    public static Task<AuthenticationState> AuthState { get; set; } = null!;
    private List<GetUserDto> friends;
    [Inject]
    private IFriendsService FriendsService { get; set; }
    [Inject]
    public AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        ;
        friends = await FriendsService.GetAllFriends(Convert.ToInt32(authState.User.FindFirst(c => c.Type == "Id")?.Value));
    }
    




}