@using BlazorSyncTask.Services
@inject IAuthService authService
@inject NavigationManager navMgr
@page "/Register"

<AuthorizeView>
    <NotAuthorized>
        <div class="row textbs" style="padding-top: 2rem; padding-bottom: 2rem; display: flex; flex-direction: revert;">
            <div class="offset-md-1 col-md-6 tit">
                <p>Wish to Sign-Up?</p>
            </div>
            <div class="offset-md-3 col-md-2 logo">
                <p>synctask</p>
            </div>
            <div class="offset-md-1 col-md-6 sub">
                <p>Sign up and start your journey</p>
            </div>
            <div class="offset-md-1 col-md-6 sub">
                           <img src="reg.png" class="img-fluid" alt="Image description">

                        </div>
        </div>
        
        
        <div class="tab-panel bg-transparent" id="register">
            <div class="card bg-transparent border-0">
                <div class="card-body">
                    <form>
                        <div class="mb-3">
                            <label class="form-label text-white" >Name</label>
                            <input type="text" class="form-control" placeholder="Enter Your Name" @bind="@fullName" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label text-white" >Username</label>
                            <input type="text" class="form-control" placeholder="Enter Your Username" @bind="@userName" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label text-white">Email</label>
                            <input type="email" class="form-control text-white" placeholder="Enter Your Email" @bind="@email">
                            <div class="invalid-feedback">
                                Enter a valid email.
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label text-white">Password</label>
                            <input type="password" class="form-control " placeholder="Enter Password" @bind="@password" />
                        </div>
                        <button type="button" class="btn btn-primary btn-rounded btn-shadow" style="background-color: #00aeef;" @onclick="@OnRegisterClicked">Create Account</button>
                    </form>
                </div>
            </div>
        </div>
     
   



        @if (!string.IsNullOrEmpty(errorLabel))
        {
            <div class="field">
                <label style="color: red">
                    @errorLabel
                </label>
            </div>
        }
        <div class="buttons" style="padding: 3rem 0 3rem 0">
          
            <div class="offset-md-10 col-md-2" style="padding-bottom: 2rem;">
                <div class="field">
                    <a class="loginbtn" @onclick="LoginAsync">Log in</a>
                </div>
            </div>


        </div>

    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hello, @context.User.Identity.Name</h3>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private string fullName;
    private string userName;
    private string email;
    private string password;
    private string errorLabel;
    Validations registerValidationsRef;
    
    private async Task LoginAsync()
    {
        navMgr.NavigateTo("/login");
    }
    
    async Task OnRegisterClicked()
    {
        if (await registerValidationsRef.ValidateAll())
        {
            errorLabel = "";
            try
            {
                await authService.RegisterAsync(fullName, userName, password, email);
                navMgr.NavigateTo("/login");
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
                errorLabel = $"Error: {e.Message}";
            }

            await registerValidationsRef.ClearAll();
        }
    }


 

}